{"version":3,"sources":["components/PageNotFound/racoon.png","components/PageNotFound/PageNotFound.jsx","constants.js","components/Users/constants.js","components/Users/UserForm/converter.js","api/utisl.js","api/userApi/index.js","components/Users/UsersTable/Actions/index.jsx","components/Users/UsersTable/index.jsx","common/Formik/Input/index.jsx","components/Users/UserForm/FormContainer/Buttons/index.jsx","components/Users/UserForm/FormContainer/index.jsx","components/Users/UserForm/index.jsx","components/Users/index.jsx","components/Header/header.jsx","components/Books/Helpers/Helpers.jsx","components/Books/BooksFakeAPI/BooksApi.jsx","components/Books/BooksTable/AddBookButton.jsx","components/Books/BooksTable/ActionButtons.jsx","components/Books/BooksTable/BooksTable.jsx","components/Books/BooksForm/BooksFormInputs.jsx","components/Books/BooksForm/BooksForm.jsx","components/Books/Books.jsx","components/App/index.jsx","components/Root/index.jsx","index.js"],"names":["PageNotFound","className","src","logo","alt","MODE","USERNAME","ROLE","AGE","INITIAL_STATE","timeConverter","timestamp","date","Date","year","getFullYear","month","getMonth","toString","padStart","day","getDate","hours","getHours","minutes","getMinutes","substr","getRequestPayload","values","id","username","age","role","wait","ms","Promise","resolve","setTimeout","createGetId","initialId","getTimestamp","now","throwError","Error","getId","data","length","api","getUsers","console","log","getUser","user","find","u","createUser","newUser","push","editUser","index","findIndex","deleteUser","splice","getRoles","ROLES","Actions","setUsers","a","userApi","rest","url","useRouteMatch","history","useHistory","redirect","mode","onClick","UsersTable","users","useEffect","then","to","map","Input","name","label","validate","type","disabled","required","useField","value","field","component","Buttons","isSubmitting","useFormikContext","FormContainer","initialValues","onSubmit","roles","as","UserForm","useParams","Number","prevUsers","catch","err","window","alert","message","useState","setRoles","handleSubmit","payload","error","getInitialValues","Users","path","exact","Header","BOOK","AUTHOR","PERSONAL_RATING","READING_STATUS","IS_POPULAR","DESCRIPTION","book","author","personal_rating","reading_status","is_popular","description","getBooks","getBook","createBook","newBook","editBook","b","deleteBook","AddBookButton","ActionButtons","setBooks","BooksApi","restOfBooks","BooksTable","books","status","BooksFormInputs","bookValidationSchema","Yup","shape","min","max","validationSchema","errors","touched","BooksForm","previousState","Books","App","from","Root","children","basename","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.caec257a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/racoon.812c978c.png\";","import logo from './racoon.png';\r\nimport './PageNotFound.css';\r\n\r\nfunction PageNotFound() {\r\n  return (\r\n    <div className=\"page-not-found\">\r\n      <div>\r\n        <h1>Whoops....</h1>\r\n        <div>The page you were looking for does not exist</div>\r\n      </div>\r\n\r\n      <div className=\"logo\">\r\n        <img src={logo} alt=\"\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PageNotFound;\r\n","export const MODE = {\n    VIEW: 'view',\n    CREATE: 'create',\n    EDIT: 'edit',\n    CLONE: 'clone',\n    DELETE: 'delete',\n};","export const ID = 'id';\nexport const USERNAME = 'username';\nexport const ROLE = 'role';\nexport const TIMESTAMP = 'timestamp';\nexport const AGE = 'age';\n\nexport const INITIAL_STATE = {\n    [USERNAME]: '',\n    [ROLE]: 'user',\n    [AGE]: '',\n};","import { INITIAL_STATE } from '../constants';\n\nexport const getInitialValues = user => (user ? user : INITIAL_STATE);\n\nexport const timeConverter = timestamp => {\n    const date = new Date(timestamp);\n    const year = date.getFullYear();\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const day = date.getDate().toString().padStart(2, '0');\n    const hours = date.getHours().toString().padStart(2, '0');\n    const minutes = date.getMinutes().toString().padStart(2, '0');\n    const formattedTime = `${year}/${month}/${day} ${hours}:${minutes.substr(-2)}`;\n    return formattedTime;\n};\n\nexport const getRequestPayload = values => {\n    return {\n        id: values.id,\n        username: values.username,\n        age: +values.age,\n        role: values.role,\n        timestamp: values.timestamp,\n    };\n};","export const wait = (ms = 800) =>\n  new Promise(resolve => {\n    setTimeout(resolve, ms);\n  });\n\nexport const createGetId = initialId => () => ++initialId;\n\nexport const getTimestamp = () => Date.now();\n\nexport const throwError = id => {\n  throw new Error(`Record with ID ${id} does not exist`);\n};\n","import { wait, createGetId, getTimestamp, throwError } from '../utisl';\nimport data from './db';\n\nconst getId = createGetId(data.length);\n\nconst api = {\n    // GET /users\n    async getUsers() {\n        await wait(1000);\n\n        console.log('GET /users', data);\n        return data;\n    },\n\n    // GET /users/:id\n    async getUser(id) {\n        await wait();\n\n        const user = data.find(u => u.id === id);\n\n        if (user) {\n            console.log(`GET /users/${user.id}`, user);\n            return user;\n        } else {\n            throwError(id);\n        }\n    },\n    // POST /users\n    async createUser(user) {\n        await wait();\n\n        const newUser = {\n            ...user,\n            id: getId(),\n            timestamp: getTimestamp(),\n        };\n\n        data.push(newUser);\n\n        console.log('POST /users', newUser);\n        return newUser;\n    },\n\n    // PUT /users\n    async editUser(user) {\n        await wait();\n\n        const index = data.findIndex(u => u.id === user.id);\n\n        if (~index) {\n            data[index] = {\n                ...user,\n                timestamp: getTimestamp(),\n            };\n\n            console.log('PUT /users', data[index]);\n            return data[index];\n        } else {\n            throwError(user.id);\n        }\n    },\n    // DELETE /users\n    async deleteUser(user) {\n        await wait();\n\n        const index = data.findIndex(u => u.id === user.id);\n\n        if (~index) {\n            console.log('DELETE /users', user);\n            return data.splice(index, 1);\n        } else {\n            throwError(user.id);\n        }\n    },\n    // GET /roles\n    async getRoles() {\n        await wait();\n        const ROLES = ['user', 'super-user', 'admin'];\n\n        console.log('GET /roles', ROLES);\n        return ROLES;\n    },\n};\n\nexport default api;","import { useRouteMatch, useHistory } from 'react-router-dom';\n\nimport { MODE } from '../../../../constants';\nimport userApi from '../../../../api/userApi';\n\nfunction Actions({ id, setUsers }) {\n  async function deleteUser() {\n    await userApi.deleteUser(await userApi.getUser(id));\n    const rest = await userApi.getUsers();\n    setUsers([...rest]);\n  }\n\n  const { url } = useRouteMatch();\n  const history = useHistory();\n\n  const redirect = mode => () => {\n    history.push(`${url}/user/${mode}/${id}`);\n  };\n\n  return (\n    <div className=\"Actions\">\n      <button onClick={redirect(MODE.VIEW)}>View</button>{' '}\n      <button onClick={redirect(MODE.EDIT)}>Edit</button>\n      <button onClick={deleteUser}>Delete</button>\n      <button onClick={redirect(MODE.CLONE)}>Clone</button>\n    </div>\n  );\n}\n\nexport default Actions;\n","import { useEffect } from 'react';\nimport { useRouteMatch, Link } from 'react-router-dom';\nimport { timeConverter } from '../UserForm/converter';\nimport userApi from '../../../api/userApi';\nimport { MODE } from '../../../constants';\nimport { ID, USERNAME, ROLE, TIMESTAMP, AGE } from '../constants';\nimport Actions from './Actions';\nimport './index.scss';\n\nfunction UsersTable({ users, setUsers }) {\n  const { url } = useRouteMatch();\n\n  useEffect(() => {\n    userApi.getUsers().then(setUsers);\n  }, [setUsers]);\n\n  return (\n    <div className=\"UsersTable\">\n      <Link to={`${url}/user/${MODE.CREATE}`}>Create User</Link>\n\n      <table>\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Username</th>\n            <th>Age</th>\n            <th>Role</th>\n            <th>Last Updated At</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {users.map(user => (\n            <tr key={user[ID]}>\n              <td>{user[ID]}</td>\n              <td>{user[USERNAME]}</td>\n              <td>{user[AGE]}</td>\n              <td>{user[ROLE]}</td>\n              <td>{timeConverter(user[TIMESTAMP])}</td>\n              <td>\n                <Actions setUsers={setUsers} id={user[ID]} />\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default UsersTable;\n","import { useField, ErrorMessage } from 'formik';\n\nimport './styles.scss';\n\nfunction Input({ name, label, validate, type = 'text', disabled = false, required = false }) {\n  const requiredValidation = value => {\n    if (required && value === '') {\n      return 'This field is required, please add the necessary information';\n    }\n\n    return validate ? validate(value) : false;\n  };\n  const [field] = useField({ name, validate: requiredValidation });\n\n  return (\n    <div className=\"Input\">\n      <label>\n        <div>{required ? '*' + label : label}</div>\n        <input type={type} disabled={disabled} {...field} />\n      </label>\n\n      <ErrorMessage name={name} className=\"error\" component=\"div\" />\n    </div>\n  );\n}\n\nexport default Input;\n","import { useHistory } from 'react-router-dom';\nimport { useFormikContext } from 'formik';\n\nimport { MODE } from '../../../../../constants';\n\nfunction Buttons({ mode }) {\n  const history = useHistory();\n  const { isSubmitting } = useFormikContext();\n\n  return (\n    <div>\n      {(mode === MODE.CREATE || mode === MODE.EDIT || mode === MODE.CLONE) && (\n        <button type=\"submit\" disabled={isSubmitting}>\n          Save\n        </button>\n      )}\n\n      <button type=\"button\" onClick={() => history.push('/users')}>\n        Cancel\n      </button>\n    </div>\n  );\n}\n\nexport default Buttons;\n","import { Field, Formik, Form } from 'formik';\nimport Input from '../../../../common/Formik/Input';\nimport { MODE } from '../../../../constants';\nimport { ROLE, USERNAME, AGE } from '../../constants';\nimport Buttons from './Buttons';\n\nfunction FormContainer({ initialValues, onSubmit, mode, roles }) {\n  return (\n    <Formik initialValues={initialValues} onSubmit={onSubmit}>\n      <Form>\n        <Input required name={USERNAME} label={'Username'} disabled={mode === MODE.VIEW} />\n        Role\n        <br />\n        <Field as=\"select\" required disabled={mode === MODE.VIEW} label=\"Role\" name={ROLE}>\n          <option value=\"user\">User</option>\n          <option value=\"admin\">Admin</option>\n          <option value=\"super-user\">Super-user</option>\n        </Field>\n        <br />\n        <Input\n          required\n          name={AGE}\n          label={'Age'}\n          disabled={mode === MODE.VIEW}\n          type=\"number\"\n          validate={value => {\n            if (value < 16 || value > 110) {\n              return 'The age should be within the range of 16 and 110';\n            }\n          }}\n        ></Input>\n        <Buttons mode={mode} />\n      </Form>\n    </Formik>\n  );\n}\n\nexport default FormContainer;\n","import { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport './UserForm.css';\nimport userApi from '../../../api/userApi';\nimport { MODE } from '../../../constants';\nimport { ID } from '../constants';\nimport FormContainer from './FormContainer';\nimport { getInitialValues, getRequestPayload } from './converter';\n\nfunction UserForm({ users, setUsers }) {\n  const { mode, id } = useParams();\n  const history = useHistory();\n\n  const user = users.find(user => user.id === Number(id));\n\n  useEffect(() => {\n    if (mode === MODE.VIEW || mode === MODE.EDIT || mode === MODE.CLONE) {\n      if (!user) {\n        userApi\n          .getUser(Number(id))\n          .then(user => setUsers(prevUsers => [...prevUsers, user]))\n          .catch(err => window.alert(err.message));\n      }\n    }\n  }, [id, mode, user, setUsers]);\n\n  const [roles, setRoles] = useState([]);\n  useEffect(() => {\n    userApi.getRoles().then(setRoles);\n  }, [setUsers]);\n\n  const handleSubmit = async values => {\n    try {\n      // console.log(values);\n      const payload = getRequestPayload(values);\n      console.log(payload);\n      switch (mode) {\n        case MODE.CREATE:\n          await userApi.createUser(payload);\n          break;\n        case MODE.EDIT:\n          await userApi.editUser(payload);\n          break;\n        case MODE.CLONE:\n          await userApi.createUser(payload);\n          break;\n        default:\n          console.error(`Failed to execute this request for ${mode} mode`);\n      }\n    } catch (err) {\n      window.alert(err.message);\n    }\n\n    history.push('/users');\n  };\n\n  const initialValues = getInitialValues(user);\n\n  return (\n    <FormContainer\n      key={`${mode}:${initialValues[ID]}`}\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      mode={mode}\n      roles={roles}\n    />\n  );\n}\n\nexport default UserForm;\n","import { useState } from 'react';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\nimport PageNotFound from '../PageNotFound/PageNotFound';\nimport { MODE } from '../../constants';\nimport UsersTable from './UsersTable';\nimport UserForm from './UserForm';\n\nfunction Users() {\n  const { path } = useRouteMatch();\n  const [users, setUsers] = useState([]);\n  console.log(users);\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path={path}>\n          <UsersTable users={users} setUsers={setUsers} />\n        </Route>\n\n        <Route\n          exact\n          path={`${path}/user/:mode(${MODE.CLONE}|${MODE.VIEW}|${MODE.CREATE}|${MODE.EDIT})/:id?`}\n        >\n          <UserForm users={users} setUsers={setUsers} />\n        </Route>\n\n        <Route>\n          <PageNotFound></PageNotFound>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default Users;\n","import './Header.css';\r\nimport { useRouteMatch, Link } from 'react-router-dom';\r\nfunction Header() {\r\n  const { url } = useRouteMatch();\r\n\r\n  return (\r\n    <header>\r\n      <nav className=\"menu-container\">\r\n        <div>\r\n          <Link to={`${url}users`}>Users</Link>\r\n        </div>\r\n        <div>\r\n          <Link to={`${url}books`}>Books</Link>\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","export const ID = 'id';\r\nexport const BOOK = 'book'; // string - required\r\nexport const AUTHOR = 'author'; // string - not required\r\nexport const PERSONAL_RATING = 'personal_rating'; // number: 0 - 10 - not required\r\nexport const READING_STATUS = 'reading_status'; // pre-defined [done, planning, in progress] (radiobutton)\r\nexport const IS_POPULAR = 'is_popular'; // boolean (checkbox) - not required\r\nexport const DESCRIPTION = 'description'; // string  - required\r\n\r\n\r\nexport const INITIAL_STATE = {\r\n  [BOOK]: '',\r\n  [AUTHOR]: '',\r\n  [PERSONAL_RATING]: '',\r\n  [READING_STATUS]: '',\r\n  [IS_POPULAR]: '',\r\n  [DESCRIPTION]: '',\r\n};\r\n\r\nexport const MODE = {\r\n  CREATE: 'create',\r\n  EDIT: 'edit',\r\n};\r\n\r\nexport const getInitialValues = book => (book ? book : INITIAL_STATE);\r\n\r\nexport const getRequestPayload = values => {\r\n  return {\r\n    id: values.id,\r\n    book: values.book,\r\n    author: values.author,\r\n    personal_rating: values.personal_rating,\r\n    reading_status: values.reading_status,\r\n    is_popular: values.is_popular,\r\n    description: values.description,\r\n  };\r\n};\r\n","import { wait, createGetId, throwError } from '../../../api/utisl';\r\nimport data from './Books';\r\n\r\nconst getId = createGetId(data.length);\r\n\r\nconst api = {\r\n  async getBooks() {\r\n    await wait(1000);\r\n    return data;\r\n  },\r\n\r\n  async getBook(id) {\r\n    await wait();\r\n    const book = data.find(book => book.id === id);\r\n\r\n    if (book) {\r\n      return book;\r\n    } else {\r\n      throwError(id);\r\n    }\r\n  },\r\n  async createBook(book) {\r\n    await wait();\r\n\r\n    const newBook = {\r\n      ...book,\r\n      id: getId(),\r\n    };\r\n\r\n    data.push(newBook);\r\n\r\n    return newBook;\r\n  },\r\n\r\n  async editBook(book) {\r\n    await wait();\r\n    const index = data.findIndex(b => b.id === book.id);\r\n\r\n    if (~index) {\r\n      data[index] = {\r\n        ...book,\r\n      };\r\n\r\n      return data[index];\r\n    } else {\r\n      throwError(book.id);\r\n    }\r\n  },\r\n\r\n  async deleteBook(book) {\r\n    await wait();\r\n\r\n    const index = data.findIndex(b => b.id === book.id);\r\n\r\n    if (~index) {\r\n      return data.splice(index, 1);\r\n    } else {\r\n      throwError(book.id);\r\n    }\r\n  },\r\n  // GET /roles\r\n  //   async getRoles() {\r\n  //     await wait();\r\n  //     const ROLES = ['user', 'super-user', 'admin'];\r\n\r\n  //     console.log('GET /roles', ROLES);\r\n  //     return ROLES;\r\n  //   },\r\n};\r\n\r\nexport default api;\r\n","import { useRouteMatch, Link } from 'react-router-dom';\r\nimport { MODE } from '../Helpers/Helpers';\r\nimport './style.css';\r\n\r\nfunction AddBookButton() {\r\n  const { url } = useRouteMatch();\r\n  return (\r\n    <div className=\"add-book-btn-container\">\r\n      <div className=\"add-book-button-description\">\r\n        <h1>Books table</h1>\r\n        Hi there! Here you can add any book of your choise 📚 You may add your favourite books or\r\n        the books that you are planning to read in the future. Once you are done with the book, feel\r\n        free to mark it accordingly using the Edit button (finished books are marked with the green\r\n        color in the table)\r\n      </div>\r\n      <button className=\"add-book-btn\">\r\n        <Link to={`${url}/book/${MODE.CREATE}`}>Add a book</Link>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddBookButton;\r\n","import { MODE } from '../Helpers/Helpers';\r\nimport BooksApi from '../BooksFakeAPI/BooksApi';\r\nimport { useRouteMatch, useHistory } from 'react-router-dom';\r\n\r\nfunction ActionButtons({ id, setBooks }) {\r\n  const deleteBook = async () => {\r\n    await BooksApi.deleteBook(await BooksApi.getBook(id));\r\n    const restOfBooks = await BooksApi.getBooks();\r\n    setBooks([...restOfBooks]);\r\n  };\r\n\r\n  const { url } = useRouteMatch();\r\n  const history = useHistory();\r\n\r\n  const redirect = mode => () => {\r\n    history.push(`${url}/book/${mode}/${id}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={redirect(MODE.EDIT)}>Edit</button>\r\n      <button onClick={deleteBook}>Delete</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ActionButtons;\r\n","import { useEffect } from 'react';\r\nimport BooksApi from '../BooksFakeAPI/BooksApi';\r\nimport AddBookButton from './AddBookButton';\r\nimport ActionButtons from './ActionButtons';\r\nimport {\r\n  ID,\r\n  BOOK,\r\n  AUTHOR,\r\n  PERSONAL_RATING,\r\n  READING_STATUS,\r\n  IS_POPULAR,\r\n  DESCRIPTION,\r\n} from '../Helpers/Helpers';\r\nimport './style.css';\r\n\r\nfunction BooksTable({ books, setBooks }) {\r\n  useEffect(() => {\r\n    BooksApi.getBooks().then(setBooks);\r\n  }, [setBooks]);\r\n\r\n  function generateClass(status) {\r\n    if (status === 'done') {\r\n      return 'done';\r\n    } else if (status === 'in progress') {\r\n      return 'in-progress';\r\n    } else {\r\n      return 'planning';\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"books-table-container\">\r\n      <AddBookButton></AddBookButton>\r\n      <table className=\"books-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Book</th>\r\n            <th>Author</th>\r\n            <th>Rate</th>\r\n            <th>Status</th>\r\n            <th>Popular</th>\r\n            <th>Description</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {books.map(book => (\r\n            <tr className={generateClass(book[READING_STATUS])} key={book[ID]}>\r\n              <td>{book[BOOK]}</td>\r\n              <td>{book[AUTHOR]}</td>\r\n              <td>{book[PERSONAL_RATING]}</td>\r\n              <td>{book[READING_STATUS]}</td>\r\n              <td>{book[IS_POPULAR] ? 'yes' : 'no'}</td>\r\n              <td>{book[DESCRIPTION]}</td>\r\n              <td>\r\n                <ActionButtons setBooks={setBooks} id={book[ID]} />{' '}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BooksTable;\r\n","import { Field, Formik, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport {\r\n  BOOK,\r\n  AUTHOR,\r\n  PERSONAL_RATING,\r\n  READING_STATUS,\r\n  IS_POPULAR,\r\n  DESCRIPTION,\r\n} from '../Helpers/Helpers';\r\n\r\nfunction BooksFormInputs({ initialValues, onSubmit, mode }) {\r\n  const history = useHistory();\r\n  const bookValidationSchema = Yup.object().shape({\r\n    book: Yup.string()\r\n      .min(3, ' The name of the book is too short, it should be at least 3 characters long')\r\n      .max(100, 'The name of the book should be up to 100 characters')\r\n      .required('This field is required, please enter it'),\r\n    author: Yup.string().min(2, 'Please add at least 3 characters here').max(50, 'Too Long!'),\r\n    personal_rating: Yup.number()\r\n      .min(0, 'The mininmum rating is 0')\r\n      .max(10, 'The maximum rating is 10'),\r\n    reading_status: Yup.string().required('This field is required, please enter it'),\r\n    description: Yup.string()\r\n      .min(3, ' The description should be at least 3 characters long')\r\n      .max(900, 'The description should be up to 900 characters')\r\n      .required('This field is required, please enter it'),\r\n  });\r\n\r\n  return (\r\n    <Formik\r\n      validationSchema={bookValidationSchema}\r\n      initialValues={initialValues}\r\n      onSubmit={onSubmit}\r\n    >\r\n      {({ errors, touched }) => (\r\n        <Form className=\"book-form\">\r\n          <h2>Simple questions about the book...</h2>\r\n          <div className=\"books-form-questions\">\r\n            <div>Please enter a name of the book</div>\r\n            <Field name={BOOK} label={'book'} />\r\n            {errors.book && touched.book ? (\r\n              <div className=\"error-msg-book-form\">{errors.book}</div>\r\n            ) : null}\r\n\r\n            <br />\r\n\r\n            <div>Please enter the author of the book</div>\r\n            <Field name={AUTHOR} label={'autor'} />\r\n            {errors.author && touched.author ? (\r\n              <div className=\"error-msg-book-form\">{errors.author}</div>\r\n            ) : null}\r\n\r\n            <br />\r\n            <div>\r\n              Please rate the book from 0 to 10 (you can skip this one now and add a rating once you\r\n              read the book:\r\n            </div>\r\n            <Field name={PERSONAL_RATING} type=\"number\" />\r\n            {errors.personal_rating && touched.personal_rating ? (\r\n              <div className=\"error-msg-book-form\">{errors.personal_rating}</div>\r\n            ) : null}\r\n            <br />\r\n            <div>\r\n              <label>\r\n                <Field type=\"checkbox\" name={IS_POPULAR}></Field>\r\n                This is a popular book\r\n              </label>{' '}\r\n            </div>\r\n\r\n            <br />\r\n            <div role=\"group\" aria-labelledby=\"my-radio-group\">\r\n              <div>Have you read this book? </div>\r\n              <label>\r\n                <Field type=\"radio\" name={READING_STATUS} value=\"planning\" />I have not read the\r\n                book yet, but I am planning to read it really soon 📙\r\n              </label>\r\n              <label>\r\n                <Field type=\"radio\" name={READING_STATUS} value=\"in progress\" />I am reading this\r\n                book right now 📖\r\n              </label>\r\n              <label>\r\n                <Field type=\"radio\" name={READING_STATUS} value=\"done\" />I have already read this\r\n                book 📗\r\n              </label>\r\n              {errors.reading_status && touched.reading_status ? (\r\n                <div className=\"error-msg-book-form\">{errors.reading_status}</div>\r\n              ) : null}\r\n            </div>\r\n            <br />\r\n\r\n            <div>Please add a short description of a book:</div>\r\n            <Field as=\"textarea\" name={DESCRIPTION} />\r\n            {errors.description && touched.description ? (\r\n              <div className=\"error-msg-book-form\">{errors.description}</div>\r\n            ) : null}\r\n\r\n            <div className=\"form-btns\">\r\n              <button type=\"submit\">Save</button>\r\n              <button type=\"button\" onClick={() => history.push('/books')}>\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default BooksFormInputs;\r\n","import './style.css';\r\n// react imports\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n// api\r\nimport BooksApi from '../BooksFakeAPI/BooksApi';\r\n// constants\r\nimport { MODE, ID, getInitialValues, getRequestPayload } from '../Helpers/Helpers';\r\n// components\r\nimport BooksFormInputs from './BooksFormInputs';\r\n\r\nfunction BooksForm({ books, setBooks }) {\r\n  // for the link to be redirected to the correct mode along with the correct id:\r\n  const { mode, id } = useParams();\r\n  const history = useHistory();\r\n\r\n  const book = books.find(book => book.id === Number(id));\r\n\r\n  useEffect(() => {\r\n    if (mode === MODE.EDIT) {\r\n      if (!book) {\r\n        BooksApi.getBook(Number(id))\r\n          .then(book => setBooks(previousState => [...previousState, book]))\r\n          .catch(err => window.alert(err.message));\r\n      }\r\n    }\r\n  }, [id, mode, book, setBooks]);\r\n\r\n  async function handleSubmit(values) {\r\n    const payload = getRequestPayload(values);\r\n\r\n    try {\r\n      if (mode === MODE.CREATE) {\r\n        await BooksApi.createBook(payload);\r\n      } else if (mode === MODE.EDIT) {\r\n        await BooksApi.editBook(payload);\r\n      } else {\r\n        console.log(`Failed to execute this request for ${mode} mode`);\r\n      }\r\n    } catch (err) {\r\n      window.alert(err.message);\r\n    }\r\n\r\n    history.push('/books');\r\n  }\r\n\r\n  const initialValues = getInitialValues(book);\r\n\r\n  return (\r\n    <BooksFormInputs\r\n      key={`${mode}:${initialValues[ID]}`}\r\n      initialValues={initialValues}\r\n      onSubmit={handleSubmit}\r\n      mode={mode}\r\n    />\r\n  );\r\n}\r\n\r\nexport default BooksForm;\r\n","import { useState } from 'react';\r\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\r\nimport PageNotFound from '../PageNotFound/PageNotFound';\r\nimport { MODE } from './Helpers/Helpers';\r\nimport BooksTable from './BooksTable/BooksTable';\r\nimport BooksForm from './BooksForm/BooksForm';\r\n\r\nfunction Books() {\r\n  const { path } = useRouteMatch();\r\n  const [books, setBooks] = useState([]);\r\n\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <Route exact path={path}>\r\n          <BooksTable books={books} setBooks={setBooks} />\r\n        </Route>\r\n\r\n        <Route exact path={`${path}/book/:mode(${MODE.CREATE}|${MODE.EDIT})/:id?`}>\r\n          <BooksForm books={books} setBooks={setBooks} />\r\n        </Route>\r\n\r\n        <Route>\r\n          <PageNotFound></PageNotFound>\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Books;\r\n","import { Switch, Redirect, Route } from 'react-router-dom';\nimport PageNotFound from '../PageNotFound/PageNotFound';\nimport Users from '../Users';\nimport Header from '../Header/header';\nimport Books from '../Books/Books';\nimport './style.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header></Header>\n\n      <Switch>\n        <Redirect exact from=\"/\" to=\"/users\" />\n\n        <Route path=\"/users\">\n          <Users />\n        </Route>\n\n        <Route path=\"/books\">\n          <Books />\n        </Route>\n\n        <Route>\n          <PageNotFound></PageNotFound>\n        </Route>\n        \n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import { BrowserRouter as Router } from 'react-router-dom';\n\nfunction Root({ children }) {\n  return (\n    <Router basename=\"/globallogic-js-basecamp-2021/react/03-react-router-formik/build\">\n      {children}\n    </Router>\n  );\n}\n\nexport default Root;\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\nimport Root from './components/Root';\nimport './styles.css';\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(\n  <StrictMode>\n    <Root>\n      <App />\n    </Root>\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}